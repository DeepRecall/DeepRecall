networks:
  deeprecall:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/24

services:

  qdrant:
    image: qdrant/qdrant
    container_name: deeprecall-qdrant
    restart: always
    # ports:
    #   - "6333:6333"
    #   - "6334:6334"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/qdrant:/qdrant/storage:z
    networks:
      deeprecall:
        ipv4_address: 172.25.0.2

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.3
    container_name: deeprecall-weaviate
    # ports:
    # - 8080:8080
    # - 50051:50051
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/weaviate:/var/lib/weaviate
    restart: always
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_API_BASED_MODULES: 'true'
      ENABLE_MODULES: 'text2vec-ollama,generative-ollama'
      CLUSTER_HOSTNAME: 'node1'
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8080'
    - --scheme
    - http
    networks:
      deeprecall:
        ipv4_address: 172.25.0.3

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    environment:
      - IS_PERSISTENT=TRUE
    container_name: deeprecall-chroma
    restart: always
    # ports:
    #   - "8000:8000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/chroma:/data
    networks:
      deeprecall:
        ipv4_address: 172.25.0.4

  elasticsearch:
    image: elasticsearch:9.0.1
    container_name: deeprecall-elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
    networks:
      deeprecall:
        ipv4_address: 172.25.0.5
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"

  pgvector:
    image: pgvector/pgvector:pg17
    container_name: deeprecall-pgvector
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: deeprecall
    # ports:
    #   - "5432:5432"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/postgresql:/var/lib/postgresql/data
    networks:
      deeprecall:
        ipv4_address: 172.25.0.6

  pinecone-local:
    image: ghcr.io/pinecone-io/pinecone-local:latest
    container_name: deeprecall-pinecone
    restart: always
    environment:
      - PORT=5081
      - PINECONE_HOST=localhost
    # ports:
    #   - "5081-6000:5081-6000"
    networks:
      deeprecall:
        ipv4_address: 172.25.0.7

  tika:
    image: apache/tika:latest-full
    container_name: deeprecall-tika
    restart: always
    # ports:
    #   - "127.0.0.1:9998:9998"
    networks:
      deeprecall:
        ipv4_address: 172.25.0.10
    platform: linux/amd64

  rabbitmq:
    image: rabbitmq:4-management
    container_name: deeprecall-rabbitmq
    restart: always
    # ports:
    #   - "5672:5672"
    #   - "15672:15672"
    networks:
      deeprecall:
        ipv4_address: 172.25.0.11

  etcd:
    container_name: deeprecall-etcd
    image: gcr.io/etcd-development/etcd:v3.5.21
    restart: always
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      deeprecall:
        ipv4_address: 172.25.0.12
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: deeprecall-minio
    image: minio/minio:latest
    restart: always
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    # ports:
    #   - "9001:9001"
    #   - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    networks:
      deeprecall:
        ipv4_address: 172.25.0.13
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: deeprecall-milvus
    image: milvusdb/milvus:v2.5.10
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus/db:/var/lib/milvus
      - ./milvus.yml:/milvus/configs/user.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    networks:
      deeprecall:
        ipv4_address: 172.25.0.14
    # ports:
    #   - "19530:19530"
    #   - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
